<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.won.mapper.MemberMapper">
	
	<resultMap type="kr.co.won.domain.MemberVo" id="memberMap">
		<id property="userid" column="userid"/>
		<result property="userid" column="userid"/>
		<result property="userpw" column="userpw"/>
		<result property="userName" column="username"/>
		<result property="regDate" column="regdate"/>
		<result property="updateDate" column="updatedate"/>
		<collection property="authList" resultMap="authMap">
		</collection>
	</resultMap>
	
	<resultMap type="kr.co.won.domain.AuthVo" id="authMap">
		<result property="userid" column="userid"/>
		<result property="auth" column="auth"/>
	</resultMap>
	
	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR" >
				<foreach item="type" collection="cri.typeArr">
					<trim prefix="OR">
						<choose>
							<when test="type == 'T'.toString()">
								title like '%'||#{cri.keyword}||'%'
							</when>
							<when test="type == 'C'.toString()">
								content like '%'||#{cri.keyword}||'%'
							</when>
							<when test="type == 'W'.toString()">
								writer like '%'||#{cri.keyword}||'%'
							</when>
						</choose>
					</trim>
				</foreach>
		</trim>
	</sql>
	
	<select id="read" resultMap="memberMap">
		SELECT
			mem.userid, userpw, username, enabled, regdate, updatedate, auth
		FROM
			tbl_member mem LEFT OUTER JOIN tbl_member_auth auth on mem.userid = auth.userid
		WHERE mem.userid = #{userid}
	</select>
	
	<select id="getUserById" resultType="kr.co.won.domain.MemberVo">
		SELECT
			userid, userpw, username, enabled, regdate, updatedate, userEmail
		FROM
			tbl_member
		WHERE userid = #{userid}
	</select>
	
	<select id="getUserByEmail" resultType="kr.co.won.domain.MemberVo">
		SELECT
			userid, userpw, username, enabled, regdate, updatedate
		FROM
			tbl_member
		WHERE userEmail = #{userEmail}
	</select>
	
	<insert id="insert">
		INSERT into tbl_member(userid, userpw, userName, userEmail)
		values (#{userid}, #{userpw}, #{userName}, #{userEmail})
	</insert>
	
	<insert id="insertRole">
		INSERT into tbl_member_auth (userid, auth)
		values (#{userid}, #{auth})
	</insert>
	
	<insert id="kakaoInsert">
		 INSERT INTO TBL_MEMBER (USERID, USERPW, USERNAME, USEREMAIL, SNSID) VALUES
	    (#{userid}, #{userpw}, #{userName}, #{userEmail}, #{snsId})
	</insert>
	
	<update id="updateUser" parameterType="kr.co.won.domain.MemberVo">
    	update tbl_member
    	<set>
    		<if test="userEmail != null">
    			userEmail = #{userEmail},
    		</if>
    		<if test="userpw != null">
    			userpw = #{userpw},
    		</if>
    			updatedate = sysdate
    	</set>
    	where
    		userid = #{userid}
    </update>

	<select id="getUserPost" resultType="kr.co.won.domain.BoardVo">
		<![CDATA[
			 select 
			 	bno, title, content, writer, regdate, updateDate, replyCnt
			 from 
			 	(
			 	select /*+INDEX_DESC(tbl_board pk_board) */
			 		rownum rn, bno, title, content, writer, regdate, updateDate, replyCnt
			 	from 
			 		tbl_board
			 	where 
			]]>
			<include refid="criteria"></include>
			<![CDATA[
				writer = #{userid}
				and rownum <= #{cri.pageNum} * #{cri.amount}
			 	)
			 where rn > (#{cri.pageNum} - 1) * #{cri.amount}
			]]>
	</select>
	
	<select id="getTotalCount" resultType="int">
			select count(*) from tbl_board where 
			<include refid="criteria"></include>
			bno > 0
			and writer = #{userid}
	</select> 
	
	<select id="getUserReply" resultType="kr.co.won.domain.ReplyVo">
		<![CDATA[
			rno, bno, reply, replyer, replyDate, updateDate, title, writer, regdate
			from (
				select /*+INDEX(tbl_reply idx_reply) */
					rownum rn, R.rno, R.bno, R.reply, R.replyer, R.replyDate, R.updateDate,
                    B.title, B.writer, B.regdate
				from tbl_reply R, tbl_board B
				where replyer = #{userid}
				and R.bno = B.bno
				and R.rno > 0
				and rownum <= #{cri.pageNum} * #{cri.amount}
			) where rn > (#{cri.pageNum} - 1) * #{cri.amount}
		]]>
	</select>
</mapper>